I"~<h3 id="一实现防抖函数">一、实现防抖函数</h3>
<p>原理：在事件被触发n秒后再执行回调，如果n秒内事件又触发，那么重新计时。</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">debounce</span> <span class="o">=</span> <span class="p">(</span><span class="nx">fn</span><span class="p">,</span> <span class="nx">delay</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">timer</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
    <span class="k">return</span> <span class="p">(...</span><span class="nx">args</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timer</span><span class="p">);</span>
        <span class="nx">timer</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="nx">fn</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">args</span><span class="p">);</span>
        <span class="p">},</span> <span class="nx">delay</span><span class="p">);</span>
    <span class="p">};</span>
<span class="p">};</span>

<span class="kd">function</span> <span class="nx">a</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>

<span class="nx">timer1</span> <span class="o">=</span> <span class="nx">setInterval</span><span class="p">(</span><span class="nx">debounce</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">500</span><span class="p">),</span><span class="mi">1000</span><span class="p">)</span>
<span class="c1">// timer1 = setInterval(debounce(a,2000),1000)</span>
<span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">clearInterval</span><span class="p">(</span><span class="nx">timer1</span><span class="p">)</span>
<span class="p">},</span> <span class="mi">3000</span><span class="p">);</span>
</code></pre></div></div>

<p>使用场景：提交按钮、搜索框联想</p>

<h3 id="一实现节流函数">一、实现节流函数</h3>
<p>原理：规定在一个单位时间内，只触发一次函数。如果在这个单位时间内多次触发，只有一次生效。</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">throttle</span> <span class="o">=</span> <span class="p">(</span><span class="nx">fn</span><span class="p">,</span> <span class="nx">gepTime</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">flag</span> <span class="o">=</span> <span class="kc">true</span>
    <span class="k">return</span> <span class="p">(...</span><span class="nx">args</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">flag</span><span class="p">)</span> <span class="k">return</span>
        <span class="nx">flag</span> <span class="o">=</span> <span class="kc">false</span>
        <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="nx">fn</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">args</span><span class="p">)</span>
            <span class="nx">flag</span> <span class="o">=</span> <span class="kc">true</span>
        <span class="p">},</span> <span class="nx">gepTime</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">a</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>

<span class="nx">timer1</span> <span class="o">=</span> <span class="nx">setInterval</span><span class="p">(</span><span class="nx">throttle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="mi">1000</span><span class="p">),</span> <span class="mi">500</span><span class="p">);</span>
<span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timer1</span><span class="p">)</span>
<span class="p">},</span> <span class="mi">3000</span><span class="p">);</span>
</code></pre></div></div>

<p>使用场景：拖拽场景、缩放场景、动画场景</p>

<h3 id="三实现-call">三、实现 call</h3>

:ET